{"ast":null,"code":"var _jsxFileName = \"/home/higor/Documentos/front-api-formare/src/App.js\";\nimport React from 'react';\nimport api from './services/api';\nimport './App.css';\nlet groups = [];\napi.get('/').then(response => {\n  groups.push(response.data);\n});\n\nfunction groupNames(list, howMany) {\n  var idx = 0;\n  var result = [];\n\n  while (idx < list.length) {\n    if (idx % howMany === 0) result.push([]);\n    result[result.length - 1].push(list[idx++]);\n  }\n\n  return result;\n}\n\nvar chunkSize = Math.floor(groups.length / 4);\nconsole.log(groupNames(groups, chunkSize));\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, groups[0]);\n}\n\nexport default App;","map":{"version":3,"sources":["/home/higor/Documentos/front-api-formare/src/App.js"],"names":["React","api","groups","get","then","response","push","data","groupNames","list","howMany","idx","result","length","chunkSize","Math","floor","console","log","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,GAAP,MAAgB,gBAAhB;AAEA,OAAO,WAAP;AAEA,IAAIC,MAAM,GAAG,EAAb;AAEAD,GAAG,CAACE,GAAJ,CAAQ,GAAR,EAAaC,IAAb,CAAkBC,QAAQ,IAAI;AAC5BH,EAAAA,MAAM,CAACI,IAAP,CAAYD,QAAQ,CAACE,IAArB;AACD,CAFD;;AAIA,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,OAA1B,EAAmC;AACjC,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,MAAM,GAAG,EAAb;;AAEA,SAAOD,GAAG,GAAGF,IAAI,CAACI,MAAlB,EAA0B;AACxB,QAAIF,GAAG,GAAGD,OAAN,KAAkB,CAAtB,EAAyBE,MAAM,CAACN,IAAP,CAAY,EAAZ;AACzBM,IAAAA,MAAM,CAACA,MAAM,CAACC,MAAP,GAAgB,CAAjB,CAAN,CAA0BP,IAA1B,CAA+BG,IAAI,CAACE,GAAG,EAAJ,CAAnC;AACD;;AAED,SAAOC,MAAP;AACD;;AAED,IAAIE,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWd,MAAM,CAACW,MAAP,GAAc,CAAzB,CAAhB;AAEAI,OAAO,CAACC,GAAR,CAAYV,UAAU,CAACN,MAAD,EAASY,SAAT,CAAtB;;AAEA,SAASK,GAAT,GAAe;AAEb,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIjB,MAAM,CAAC,CAAD,CAAV,CAAR;AAED;;AAED,eAAeiB,GAAf","sourcesContent":["import React from 'react';\n\nimport api from './services/api';\n\nimport './App.css';\n\nlet groups = [];\n\napi.get('/').then(response => {\n  groups.push(response.data);\n});\n\nfunction groupNames(list, howMany) {\n  var idx = 0\n  var result = []\n\n  while (idx < list.length) {\n    if (idx % howMany === 0) result.push([])\n    result[result.length - 1].push(list[idx++])\n  }\n\n  return result\n}\n\nvar chunkSize = Math.floor(groups.length/4);\n\nconsole.log(groupNames(groups, chunkSize));\n\nfunction App() {\n\n  return (<p>{groups[0]}</p>);\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}