{"ast":null,"code":"var _jsxFileName = \"/home/higor/Documentos/front-api-formare/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport api from './services/api';\nimport './App.css';\n\nfunction chunkArray(myArray, chunk_size) {\n  var index = 0;\n  var arrayLength = myArray.length;\n  var tempArray = [];\n  var myChunk;\n\n  for (index; index < arrayLength; index += chunk_size) {\n    myChunk = myArray.slice(index, index + chunk_size); // Do something if you want with the group\n\n    tempArray.push(myChunk);\n  }\n\n  return tempArray;\n}\n\nfunction App() {\n  const [names, setNames] = useState([]);\n  let group1 = [];\n  var chunk_size = Math.floor(names.length / 4);\n  useEffect(() => {\n    api.get('/').then(response => {\n      setNames(response.data);\n    });\n  }, [names]);\n  var index = 0;\n  var arrayLength = names.length;\n  var myChunk;\n\n  for (index; index < arrayLength; index += chunk_size) {\n    myChunk = names.slice(index, index + chunk_size);\n    setNames(myChunk);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Grupos\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Grupo 1\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, names)));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/higor/Documentos/front-api-formare/src/App.js"],"names":["React","useEffect","useState","api","chunkArray","myArray","chunk_size","index","arrayLength","length","tempArray","myChunk","slice","push","App","names","setNames","group1","Math","floor","get","then","response","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AAEA,OAAO,WAAP;;AAEA,SAASC,UAAT,CAAoBC,OAApB,EAA6BC,UAA7B,EAAwC;AACtC,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,WAAW,GAAGH,OAAO,CAACI,MAA1B;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,OAAJ;;AAEA,OAAKJ,KAAL,EAAYA,KAAK,GAAGC,WAApB,EAAiCD,KAAK,IAAID,UAA1C,EAAsD;AAClDK,IAAAA,OAAO,GAAGN,OAAO,CAACO,KAAR,CAAcL,KAAd,EAAqBA,KAAK,GAACD,UAA3B,CAAV,CADkD,CAElD;;AACAI,IAAAA,SAAS,CAACG,IAAV,CAAeF,OAAf;AACH;;AAED,SAAOD,SAAP;AACD;;AAED,SAASI,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAIe,MAAM,GAAG,EAAb;AAEA,MAAIX,UAAU,GAAGY,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACN,MAAN,GAAa,CAAxB,CAAjB;AAEAR,EAAAA,SAAS,CAAC,MAAI;AACZE,IAAAA,GAAG,CAACiB,GAAJ,CAAQ,GAAR,EAAaC,IAAb,CAAkBC,QAAQ,IAAI;AAC5BN,MAAAA,QAAQ,CAACM,QAAQ,CAACC,IAAV,CAAR;AACD,KAFD;AAID,GALQ,EAKN,CAACR,KAAD,CALM,CAAT;AAOA,MAAIR,KAAK,GAAG,CAAZ;AACA,MAAIC,WAAW,GAAGO,KAAK,CAACN,MAAxB;AACA,MAAIE,OAAJ;;AAEA,OAAKJ,KAAL,EAAYA,KAAK,GAAGC,WAApB,EAAiCD,KAAK,IAAID,UAA1C,EAAsD;AAClDK,IAAAA,OAAO,GAAGI,KAAK,CAACH,KAAN,CAAYL,KAAZ,EAAmBA,KAAK,GAACD,UAAzB,CAAV;AAEAU,IAAAA,QAAQ,CAACL,OAAD,CAAR;AACH;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAII,KAAJ,CAFF,CALF,CADF;AAqBD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from './services/api';\n\nimport './App.css';\n\nfunction chunkArray(myArray, chunk_size){\n  var index = 0;\n  var arrayLength = myArray.length;\n  var tempArray = [];\n  var myChunk;\n  \n  for (index; index < arrayLength; index += chunk_size) {\n      myChunk = myArray.slice(index, index+chunk_size);\n      // Do something if you want with the group\n      tempArray.push(myChunk);\n  }\n\n  return tempArray;\n}\n\nfunction App() {\n  const [names, setNames] = useState([]);\n  let group1 = [];\n\n  var chunk_size = Math.floor(names.length/4);\n\n  useEffect(()=>{\n    api.get('/').then(response => {\n      setNames(response.data);\n    });\n\n  }, [names]);\n\n  var index = 0;\n  var arrayLength = names.length;\n  var myChunk;\n  \n  for (index; index < arrayLength; index += chunk_size) {\n      myChunk = names.slice(index, index+chunk_size);\n      \n      setNames(myChunk);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Grupos</h1>\n      </header>\n\n      <ul>\n        <p>Grupo 1</p>\n        <p>{names}</p>\n        {/* {group1.map(name => (\n          <li key={name.name}>\n          <p>{name.name}</p>\n        </li>\n        ))\n        } */}\n        \n      </ul>\n\n    </div>\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}