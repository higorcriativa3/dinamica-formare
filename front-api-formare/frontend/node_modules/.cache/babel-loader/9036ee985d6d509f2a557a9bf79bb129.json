{"ast":null,"code":"var _jsxFileName = \"/home/higor/Documentos/front-api-formare/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport api from './services/api';\nimport './App.css';\n\nfunction chunkArray(myArray, chunk_size) {\n  var index = 0;\n  var arrayLength = myArray.length;\n  var tempArray = [];\n  var myChunk;\n\n  for (index; index < arrayLength; index += chunk_size) {\n    myChunk = myArray.slice(index, index + chunk_size); // Do something if you want with the group\n\n    tempArray.push(myChunk);\n  }\n\n  return tempArray;\n}\n\nfunction App() {\n  const [names, setNames] = useState([]);\n  var chunk_size = Math.floor(names.length / 4);\n  useEffect(() => {\n    api.get('/').then(response => {\n      setNames(response.data);\n    });\n  }, [names]);\n  let groups = chunkArray(names, chunk_size);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Grupos\")), console.log(groups), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Grupo 1\"), groups.forEach(el => {\n    el.forEach(el => {\n      el.map(group => /*#__PURE__*/React.createElement(\"li\", {\n        key: group,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, group)));\n    });\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/higor/Documentos/front-api-formare/src/App.js"],"names":["React","useEffect","useState","api","chunkArray","myArray","chunk_size","index","arrayLength","length","tempArray","myChunk","slice","push","App","names","setNames","Math","floor","get","then","response","data","groups","console","log","forEach","el","map","group"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AAEA,OAAO,WAAP;;AAEA,SAASC,UAAT,CAAoBC,OAApB,EAA6BC,UAA7B,EAAwC;AACtC,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,WAAW,GAAGH,OAAO,CAACI,MAA1B;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,OAAJ;;AAEA,OAAKJ,KAAL,EAAYA,KAAK,GAAGC,WAApB,EAAiCD,KAAK,IAAID,UAA1C,EAAsD;AAClDK,IAAAA,OAAO,GAAGN,OAAO,CAACO,KAAR,CAAcL,KAAd,EAAqBA,KAAK,GAACD,UAA3B,CAAV,CADkD,CAElD;;AACAI,IAAAA,SAAS,CAACG,IAAV,CAAeF,OAAf;AACH;;AAED,SAAOD,SAAP;AACD;;AAED,SAASI,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AAEA,MAAII,UAAU,GAAGW,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACN,MAAN,GAAa,CAAxB,CAAjB;AAEAR,EAAAA,SAAS,CAAC,MAAI;AACZE,IAAAA,GAAG,CAACgB,GAAJ,CAAQ,GAAR,EAAaC,IAAb,CAAkBC,QAAQ,IAAI;AAC5BL,MAAAA,QAAQ,CAACK,QAAQ,CAACC,IAAV,CAAR;AACD,KAFD;AAID,GALQ,EAKN,CAACP,KAAD,CALM,CAAT;AAOA,MAAIQ,MAAM,GAAGnB,UAAU,CAACW,KAAD,EAAQT,UAAR,CAAvB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,EAIGkB,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAJH,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAGIA,MAAM,CAACG,OAAP,CAAeC,EAAE,IAAI;AAEnBA,IAAAA,EAAE,CAACD,OAAH,CAAWC,EAAE,IAAI;AACfA,MAAAA,EAAE,CAACC,GAAH,CAAOC,KAAK,iBACZ;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,KAAJ,CADF,CADA;AAKD,KAND;AAOD,GATD,CAHJ,CANF,CADF;AA2BD;;AAED,eAAef,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from './services/api';\n\nimport './App.css';\n\nfunction chunkArray(myArray, chunk_size){\n  var index = 0;\n  var arrayLength = myArray.length;\n  var tempArray = [];\n  var myChunk;\n  \n  for (index; index < arrayLength; index += chunk_size) {\n      myChunk = myArray.slice(index, index+chunk_size);\n      // Do something if you want with the group\n      tempArray.push(myChunk);\n  }\n\n  return tempArray;\n}\n\nfunction App() {\n  const [names, setNames] = useState([]);\n\n  var chunk_size = Math.floor(names.length/4);\n\n  useEffect(()=>{\n    api.get('/').then(response => {\n      setNames(response.data);\n    });\n\n  }, [names]);\n\n  let groups = chunkArray(names, chunk_size);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Grupos</h1>\n      </header>\n      {console.log(groups)}\n\n      <ul>\n        <p>Grupo 1</p>\n        {\n          groups.forEach(el => {\n\n            el.forEach(el => {\n              el.map(group => (\n              <li key={group}>\n                <p>{group}</p>\n              </li>\n            ))\n            })\n          })\n        }\n        \n      </ul>\n\n    </div>\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}