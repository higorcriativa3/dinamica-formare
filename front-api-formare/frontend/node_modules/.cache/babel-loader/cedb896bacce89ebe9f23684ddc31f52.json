{"ast":null,"code":"var _jsxFileName = \"/home/higor/Documentos/front-api-formare/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport api from './services/api';\nimport './App.css';\nconst [names, setNames] = useState([]);\napi.get('/').then(response => {\n  setNames(response.data);\n});\nvar index = 0;\nvar arrayLength = names.length;\nvar myChunk;\nvar chunk_size = Math.floor(names.length / 4);\n\nfor (index; index < arrayLength; index += chunk_size) {\n  myChunk = names.slice(index, index + chunk_size);\n  setNames(myChunk);\n}\n\nconsole.log(names);\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"Teste\");\n}\n\nexport default App;","map":{"version":3,"sources":["/home/higor/Documentos/front-api-formare/src/App.js"],"names":["React","useEffect","useState","api","names","setNames","get","then","response","data","index","arrayLength","length","myChunk","chunk_size","Math","floor","slice","console","log","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,GAAP,MAAgB,gBAAhB;AAEA,OAAO,WAAP;AAEA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AAEAC,GAAG,CAACG,GAAJ,CAAQ,GAAR,EAAaC,IAAb,CAAkBC,QAAQ,IAAI;AAC5BH,EAAAA,QAAQ,CAACG,QAAQ,CAACC,IAAV,CAAR;AACD,CAFD;AAIA,IAAIC,KAAK,GAAG,CAAZ;AACA,IAAIC,WAAW,GAAGP,KAAK,CAACQ,MAAxB;AACA,IAAIC,OAAJ;AACA,IAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWZ,KAAK,CAACQ,MAAN,GAAa,CAAxB,CAAjB;;AAEA,KAAKF,KAAL,EAAYA,KAAK,GAAGC,WAApB,EAAiCD,KAAK,IAAII,UAA1C,EAAsD;AAClDD,EAAAA,OAAO,GAAGT,KAAK,CAACa,KAAN,CAAYP,KAAZ,EAAmBA,KAAK,GAACI,UAAzB,CAAV;AAEAT,EAAAA,QAAQ,CAACQ,OAAD,CAAR;AACH;;AAEDK,OAAO,CAACC,GAAR,CAAYf,KAAZ;;AAEA,SAASgB,GAAT,GAAe;AAEb,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAR;AAED;;AAED,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport api from './services/api';\n\nimport './App.css';\n\nconst [names, setNames] = useState([]);\n\napi.get('/').then(response => {\n  setNames(response.data);\n});\n\nvar index = 0;\nvar arrayLength = names.length;\nvar myChunk;\nvar chunk_size = Math.floor(names.length/4);\n\nfor (index; index < arrayLength; index += chunk_size) {\n    myChunk = names.slice(index, index+chunk_size);\n    \n    setNames(myChunk);\n}\n\nconsole.log(names);\n\nfunction App() {\n\n  return (<p>Teste</p>);\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}