{"ast":null,"code":"var _jsxFileName = \"/home/higor/Documentos/front-api-formare/src/App.js\";\nimport React from 'react';\nimport api from './services/api';\nimport './App.css';\nlet groups = [];\napi.get('/').then(response => {\n  groups.push(response.data);\n});\nvar index = 0;\nvar arrayLength = groups.length;\nvar myChunk = [];\nvar chunk_size = Math.floor(groups.length / 3);\n\nfor (index; index < arrayLength; index += chunk_size) {\n  myChunk.push(groups.slice(index, index + chunk_size)); //groups = [myChunk];\n}\n\nconsole.log(myChunk);\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, groups[0]);\n}\n\nexport default App;","map":{"version":3,"sources":["/home/higor/Documentos/front-api-formare/src/App.js"],"names":["React","api","groups","get","then","response","push","data","index","arrayLength","length","myChunk","chunk_size","Math","floor","slice","console","log","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,GAAP,MAAgB,gBAAhB;AAEA,OAAO,WAAP;AAEA,IAAIC,MAAM,GAAG,EAAb;AAEAD,GAAG,CAACE,GAAJ,CAAQ,GAAR,EAAaC,IAAb,CAAkBC,QAAQ,IAAI;AAC5BH,EAAAA,MAAM,CAACI,IAAP,CAAYD,QAAQ,CAACE,IAArB;AACD,CAFD;AAIA,IAAIC,KAAK,GAAG,CAAZ;AACA,IAAIC,WAAW,GAAGP,MAAM,CAACQ,MAAzB;AACA,IAAIC,OAAO,GAAG,EAAd;AACA,IAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWZ,MAAM,CAACQ,MAAP,GAAc,CAAzB,CAAjB;;AAEA,KAAKF,KAAL,EAAYA,KAAK,GAAGC,WAApB,EAAiCD,KAAK,IAAII,UAA1C,EAAsD;AAClDD,EAAAA,OAAO,CAACL,IAAR,CAAaJ,MAAM,CAACa,KAAP,CAAaP,KAAb,EAAoBA,KAAK,GAACI,UAA1B,CAAb,EADkD,CAGlD;AACH;;AAEDI,OAAO,CAACC,GAAR,CAAYN,OAAZ;;AAEA,SAASO,GAAT,GAAe;AAEb,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIhB,MAAM,CAAC,CAAD,CAAV,CAAR;AAED;;AAED,eAAegB,GAAf","sourcesContent":["import React from 'react';\n\nimport api from './services/api';\n\nimport './App.css';\n\nlet groups = [];\n\napi.get('/').then(response => {\n  groups.push(response.data);\n});\n\nvar index = 0;\nvar arrayLength = groups.length;\nvar myChunk = [];\nvar chunk_size = Math.floor(groups.length/3);\n\nfor (index; index < arrayLength; index += chunk_size) {\n    myChunk.push(groups.slice(index, index+chunk_size));\n    \n    //groups = [myChunk];\n}\n\nconsole.log(myChunk);\n\nfunction App() {\n\n  return (<p>{groups[0]}</p>);\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}